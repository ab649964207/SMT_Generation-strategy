
normal rule
N-formula:	 Not((v0 + v1)%2 == 0)
time cost:	 0.1947307586669922
strategies:	 [(And(v0%2 == 0, v1%2 == 1), 'take2', 1), (And(v0%2 == 1, v1%2 == 0), 'take1', 1)]
time cost:	 1.4790146350860596

normal rule
N-formula:	 Not((-1*v0 + v1)%3 == 0)
time cost:	 0.6530444622039795
strategies:	 [(And((2*v0)%3 == 0, v1%3 == 1), 'take2', 1), (And((2*v0)%3 == 1, v1%3 == 0), 'take1', 2), (And((2*v0)%3 == 2, v1%3 == 2), 'take2', 1), (And((2*v0)%3 == 0, v1%3 == 2), 'take2', 2), (And((2*v0)%3 == 1, v1%3 == 1), 'take1', 1), (And((2*v0)%3 == 2, v1%3 == 0), 'take1', 1)]
time cost:	 3.963819980621338

normal rule
N-formula:	 And(Not((-1*v0 + -1*v1)%4 == 2), Not((v0 + v1)%4 == 0))
time cost:	 7.545487403869629
strategies:	 [(And((3*v0)%4 == 0, (3*v1)%4 == 1), 'take2', 1), (And((3*v0)%4 == 1, (3*v1)%4 == 0), 'take1', 1), (And((3*v0)%4 == 2, (3*v1)%4 == 3), 'take1', 1), (And((3*v0)%4 == 3, (3*v1)%4 == 2), 'take1', 1), (And((3*v0)%4 == 0, (3*v1)%4 == 3), 'take2', 1), (And((3*v0)%4 == 1, (3*v1)%4 == 2), 'take1', 1), (And((3*v0)%4 == 2, (3*v1)%4 == 1), 'take1', 1), (And((3*v0)%4 == 3, (3*v1)%4 == 0), 'take1', 1)]
time cost:	 19.742726802825928

normal rule
N-formula:	 Not((v0 + -1*v1)%3 == 0)
time cost:	 0.9330728054046631
strategies:	 [(And(v0%3 == 0, (2*v1)%3 == 1), 'take2', 2), (And(v0%3 == 1, (2*v1)%3 == 0), 'take1', 1), (And(v0%3 == 2, (2*v1)%3 == 2), 'take1', 1), (And(v0%3 == 0, (2*v1)%3 == 2), 'take2', 1), (And(v0%3 == 1, (2*v1)%3 == 1), 'take2', 1), (And(v0%3 == 2, (2*v1)%3 == 0), 'take1', 2)]
time cost:	 6.563396692276001

normal rule
N-formula:	 Not((v0 + -1*v1)%4 == 0)
time cost:	 2.012085437774658
strategies:	 [(And(v0%4 == 0, (3*v1)%4 == 1), 'take2', 3), (And(v0%4 == 1, (3*v1)%4 == 0), 'take1', 1), (And(v0%4 == 2, (3*v1)%4 == 3), 'take1', 1), (And(v0%4 == 3, (3*v1)%4 == 2), 'take1', 1), (And(v0%4 == 0, (3*v1)%4 == 2), 'take2', 2), (And(v0%4 == 1, (3*v1)%4 == 1), 'take2', 2), (And(v0%4 == 2, (3*v1)%4 == 0), 'take1', 2), (And(v0%4 == 3, (3*v1)%4 == 3), 'take1', 2), (And(v0%4 == 0, (3*v1)%4 == 3), 'take2', 1), (And(v0%4 == 1, (3*v1)%4 == 2), 'take2', 1), (And(v0%4 == 2, (3*v1)%4 == 1), 'take2', 1), (And(v0%4 == 3, (3*v1)%4 == 0), 'take1', 3)]
time cost:	 9.253772735595703

normal rule
N-formula:	 And(Not((-1*v0 + -1*v1)%4 == 2), Not((v0 + v1)%4 == 0))
time cost:	 4.190034866333008
strategies:	 [(And((3*v0)%4 == 0, (3*v1)%4 == 1), 'take2', 1), (And((3*v0)%4 == 1, (3*v1)%4 == 0), 'take1', 1), (And((3*v0)%4 == 2, (3*v1)%4 == 3), 'take1', 1), (And((3*v0)%4 == 3, (3*v1)%4 == 2), 'take1', 1), (And((3*v0)%4 == 0, (3*v1)%4 == 3), 'take2', 1), (And((3*v0)%4 == 1, (3*v1)%4 == 2), 'take1', 1), (And((3*v0)%4 == 2, (3*v1)%4 == 1), 'take1', 1), (And((3*v0)%4 == 3, (3*v1)%4 == 0), 'take1', 1)]
time cost:	 11.898586988449097

normal rule
N-formula:	 Not((v0 + -1*v1)%3 == 0)
time cost:	 0.5756113529205322
strategies:	 [(And(v0%3 == 0, (2*v1)%3 == 1), 'take2', 2), (And(v0%3 == 1, (2*v1)%3 == 0), 'take1', 1), (And(v0%3 == 2, (2*v1)%3 == 2), 'take1', 1), (And(v0%3 == 0, (2*v1)%3 == 2), 'take2', 1), (And(v0%3 == 1, (2*v1)%3 == 1), 'take2', 1), (And(v0%3 == 2, (2*v1)%3 == 0), 'take1', 2)]
time cost:	 4.454833269119263

normal rule
N-formula:	 Not((v0 + -1*v1)%4 == 0)
time cost:	 2.0207037925720215
strategies:	 [(And(v0%4 == 0, (3*v1)%4 == 1), 'take2', 3), (And(v0%4 == 1, (3*v1)%4 == 0), 'take1', 1), (And(v0%4 == 2, (3*v1)%4 == 3), 'take1', 1), (And(v0%4 == 3, (3*v1)%4 == 2), 'take1', 1), (And(v0%4 == 0, (3*v1)%4 == 2), 'take2', 2), (And(v0%4 == 1, (3*v1)%4 == 1), 'take2', 2), (And(v0%4 == 2, (3*v1)%4 == 0), 'take1', 2), (And(v0%4 == 3, (3*v1)%4 == 3), 'take1', 2), (And(v0%4 == 0, (3*v1)%4 == 3), 'take2', 1), (And(v0%4 == 1, (3*v1)%4 == 2), 'take2', 1), (And(v0%4 == 2, (3*v1)%4 == 1), 'take2', 1), (And(v0%4 == 3, (3*v1)%4 == 0), 'take1', 3)]
time cost:	 9.553004741668701

normal rule
N-formula:	 Not((-2*v0 + 2*v1)%5 == 0)
time cost:	 19.870426177978516
strategies:	 [(And((3*v0)%5 == 0, (2*v1)%5 == 1), 'take2', 3), (And((3*v0)%5 == 1, (2*v1)%5 == 0), 'take1', 2), (And((3*v0)%5 == 2, (2*v1)%5 == 4), 'take1', 2), (And((3*v0)%5 == 3, (2*v1)%5 == 3), 'take2', 3), (And((3*v0)%5 == 4, (2*v1)%5 == 2), 'take1', 2), (And((3*v0)%5 == 0, (2*v1)%5 == 2), 'take2', 1), (And((3*v0)%5 == 1, (2*v1)%5 == 1), 'take2', 1), (And((3*v0)%5 == 2, (2*v1)%5 == 0), 'take1', 4), (And((3*v0)%5 == 3, (2*v1)%5 == 4), 'take2', -1*v0 + v1), (And((3*v0)%5 == 4, (2*v1)%5 == 3), 'take2', 1), (And((3*v0)%5 == 0, (2*v1)%5 == 3), 'take2', 4), (And((3*v0)%5 == 1, (2*v1)%5 == 2), 'take1', 1), (And((3*v0)%5 == 2, (2*v1)%5 == 1), 'take1', 1), (And((3*v0)%5 == 3, (2*v1)%5 == 0), 'take1', 1), (And((3*v0)%5 == 4, (2*v1)%5 == 4), 'take1', 1), (And((3*v0)%5 == 0, (2*v1)%5 == 4), 'take2', 2), (And((3*v0)%5 == 1, (2*v1)%5 == 3), 'take2', 2), (And((3*v0)%5 == 2, (2*v1)%5 == 2), 'take1', 3), (And((3*v0)%5 == 3, (2*v1)%5 == 1), 'take2', 2), (And((3*v0)%5 == 4, (2*v1)%5 == 0), 'take1', 3)]
time cost:	 33.48405146598816

normal rule
N-formula:	 Not((-1*v0 + v1)%6 == 0)
time cost:	 23.533134698867798
strategies:	 [(And((5*v0)%6 == 0, v1%6 == 1), 'take2', 1), (And((5*v0)%6 == 1, v1%6 == 0), 'take1', 5), (And((5*v0)%6 == 2, v1%6 == 5), 'take2', 1), (And((5*v0)%6 == 3, v1%6 == 4), 'take2', 1), (And((5*v0)%6 == 4, v1%6 == 3), 'take2', 1), (And((5*v0)%6 == 5, v1%6 == 2), 'take2', 1), (And((5*v0)%6 == 0, v1%6 == 2), 'take2', 2), (And((5*v0)%6 == 1, v1%6 == 1), 'take1', 4), (And((5*v0)%6 == 2, v1%6 == 0), 'take1', 4), (And((5*v0)%6 == 3, v1%6 == 5), 'take2', 2), (And((5*v0)%6 == 4, v1%6 == 4), 'take2', 2), (And((5*v0)%6 == 5, v1%6 == 3), 'take2', 2), (And((5*v0)%6 == 0, v1%6 == 3), 'take2', 3), (And((5*v0)%6 == 1, v1%6 == 2), 'take1', 3), (And((5*v0)%6 == 2, v1%6 == 1), 'take1', 3), (And((5*v0)%6 == 3, v1%6 == 0), 'take1', 3), (And((5*v0)%6 == 4, v1%6 == 5), 'take2', 3), (And((5*v0)%6 == 5, v1%6 == 4), 'take2', 3), (And((5*v0)%6 == 0, v1%6 == 4), 'take2', 4), (And((5*v0)%6 == 1, v1%6 == 3), 'take1', 2), (And((5*v0)%6 == 2, v1%6 == 2), 'take1', 2), (And((5*v0)%6 == 3, v1%6 == 1), 'take1', 2), (And((5*v0)%6 == 4, v1%6 == 0), 'take1', 2), (And((5*v0)%6 == 5, v1%6 == 5), 'take2', 4), (And((5*v0)%6 == 0, v1%6 == 5), 'take2', 5), (And((5*v0)%6 == 1, v1%6 == 4), 'take1', 1), (And((5*v0)%6 == 2, v1%6 == 3), 'take1', 1), (And((5*v0)%6 == 3, v1%6 == 2), 'take1', 1), (And((5*v0)%6 == 4, v1%6 == 1), 'take1', 1), (And((5*v0)%6 == 5, v1%6 == 0), 'take1', 1)]
time cost:	 35.64778447151184

normal rule
N-formula:	 Not((3*v0 + -3*v1)%7 == 0)
time cost:	 58.71661686897278
strategies:	 [(And((3*v0)%7 == 0, (4*v1)%7 == 1), 'take2', 2), (And((3*v0)%7 == 1, (4*v1)%7 == 0), 'take1', 5), (And((3*v0)%7 == 2, (4*v1)%7 == 6), 'take2', 2), (And((3*v0)%7 == 3, (4*v1)%7 == 5), 'take2', 2), (And((3*v0)%7 == 4, (4*v1)%7 == 4), 'take1', 5), (And((3*v0)%7 == 5, (4*v1)%7 == 3), 'take2', 2), (And((3*v0)%7 == 6, (4*v1)%7 == 2), 'take2', 2), (And((3*v0)%7 == 0, (4*v1)%7 == 2), 'take2', 4), (And((3*v0)%7 == 1, (4*v1)%7 == 1), 'take1', 3), (And((3*v0)%7 == 2, (4*v1)%7 == 0), 'take1', 3), (And((3*v0)%7 == 3, (4*v1)%7 == 6), 'take2', 4), (And((3*v0)%7 == 4, (4*v1)%7 == 5), 'take1', 3), (And((3*v0)%7 == 5, (4*v1)%7 == 4), 'take1', 3), (And((3*v0)%7 == 6, (4*v1)%7 == 3), 'take2', 4), (And((3*v0)%7 == 0, (4*v1)%7 == 3), 'take2', 6), (And((3*v0)%7 == 1, (4*v1)%7 == 2), 'take1', 1), (And((3*v0)%7 == 2, (4*v1)%7 == 1), 'take1', 1), (And((3*v0)%7 == 3, (4*v1)%7 == 0), 'take1', 1), (And((3*v0)%7 == 4, (4*v1)%7 == 6), 'take1', 1), (And((3*v0)%7 == 5, (4*v1)%7 == 5), 'take1', 1), (And((3*v0)%7 == 6, (4*v1)%7 == 4), 'take1', v0 + -1*v1), (And((3*v0)%7 == 0, (4*v1)%7 == 4), 'take2', 1), (And((3*v0)%7 == 1, (4*v1)%7 == 3), 'take2', 1), (And((3*v0)%7 == 2, (4*v1)%7 == 2), 'take2', 1), (And((3*v0)%7 == 3, (4*v1)%7 == 1), 'take2', 1), (And((3*v0)%7 == 4, (4*v1)%7 == 0), 'take1', 6), (And((3*v0)%7 == 5, (4*v1)%7 == 6), 'take2', 1), (And((3*v0)%7 == 6, (4*v1)%7 == 5), 'take2', 1), (And((3*v0)%7 == 0, (4*v1)%7 == 5), 'take2', 3), (And((3*v0)%7 == 1, (4*v1)%7 == 4), 'take1', 4), (And((3*v0)%7 == 2, (4*v1)%7 == 3), 'take2', 3), (And((3*v0)%7 == 3, (4*v1)%7 == 2), 'take2', 3), (And((3*v0)%7 == 4, (4*v1)%7 == 1), 'take1', 4), (And((3*v0)%7 == 5, (4*v1)%7 == 0), 'take1', 4), (And((3*v0)%7 == 6, (4*v1)%7 == 6), 'take2', 3), (And((3*v0)%7 == 0, (4*v1)%7 == 6), 'take2', 5), (And((3*v0)%7 == 1, (4*v1)%7 == 5), 'take1', 2), (And((3*v0)%7 == 2, (4*v1)%7 == 4), 'take1', 2), (And((3*v0)%7 == 3, (4*v1)%7 == 3), 'take2', 5), (And((3*v0)%7 == 4, (4*v1)%7 == 2), 'take1', 2), (And((3*v0)%7 == 5, (4*v1)%7 == 1), 'take1', 2), (And((3*v0)%7 == 6, (4*v1)%7 == 0), 'take1', 2)]
time cost:	 78.88590383529663

normal rule
N-formula:	 Not((v0 + -1*v1)%8 == 0)
time cost:	 289.62558484077454
strategies:	 [(And(v0%8 == 0, (7*v1)%8 == 1), 'take2', 7), (And(v0%8 == 1, (7*v1)%8 == 0), 'take1', 1), (And(v0%8 == 2, (7*v1)%8 == 7), 'take1', 1), (And(v0%8 == 3, (7*v1)%8 == 6), 'take1', 1), (And(v0%8 == 4, (7*v1)%8 == 5), 'take1', 1), (And(v0%8 == 5, (7*v1)%8 == 4), 'take1', 1), (And(v0%8 == 6, (7*v1)%8 == 3), 'take1', 1), (And(v0%8 == 7, (7*v1)%8 == 2), 'take1', 1), (And(v0%8 == 0, (7*v1)%8 == 2), 'take2', 6), (And(v0%8 == 1, (7*v1)%8 == 1), 'take2', 6), (And(v0%8 == 2, (7*v1)%8 == 0), 'take1', 2), (And(v0%8 == 3, (7*v1)%8 == 7), 'take1', 2), (And(v0%8 == 4, (7*v1)%8 == 6), 'take1', 2), (And(v0%8 == 5, (7*v1)%8 == 5), 'take1', 2), (And(v0%8 == 6, (7*v1)%8 == 4), 'take1', 2), (And(v0%8 == 7, (7*v1)%8 == 3), 'take1', 2), (And(v0%8 == 0, (7*v1)%8 == 3), 'take2', 5), (And(v0%8 == 1, (7*v1)%8 == 2), 'take2', 5), (And(v0%8 == 2, (7*v1)%8 == 1), 'take2', 5), (And(v0%8 == 3, (7*v1)%8 == 0), 'take1', 3), (And(v0%8 == 4, (7*v1)%8 == 7), 'take1', 3), (And(v0%8 == 5, (7*v1)%8 == 6), 'take1', 3), (And(v0%8 == 6, (7*v1)%8 == 5), 'take1', 3), (And(v0%8 == 7, (7*v1)%8 == 4), 'take1', 3), (And(v0%8 == 0, (7*v1)%8 == 4), 'take2', 4), (And(v0%8 == 1, (7*v1)%8 == 3), 'take2', 4), (And(v0%8 == 2, (7*v1)%8 == 2), 'take2', 4), (And(v0%8 == 3, (7*v1)%8 == 1), 'take2', 4), (And(v0%8 == 4, (7*v1)%8 == 0), 'take1', 4), (And(v0%8 == 5, (7*v1)%8 == 7), 'take1', 4), (And(v0%8 == 6, (7*v1)%8 == 6), 'take1', 4), (And(v0%8 == 7, (7*v1)%8 == 5), 'take1', 4), (And(v0%8 == 0, (7*v1)%8 == 5), 'take2', 3), (And(v0%8 == 1, (7*v1)%8 == 4), 'take2', 3), (And(v0%8 == 2, (7*v1)%8 == 3), 'take2', 3), (And(v0%8 == 3, (7*v1)%8 == 2), 'take2', 3), (And(v0%8 == 4, (7*v1)%8 == 1), 'take2', 3), (And(v0%8 == 5, (7*v1)%8 == 0), 'take1', 5), (And(v0%8 == 6, (7*v1)%8 == 7), 'take1', 5), (And(v0%8 == 7, (7*v1)%8 == 6), 'take1', 5), (And(v0%8 == 0, (7*v1)%8 == 6), 'take2', 2), (And(v0%8 == 1, (7*v1)%8 == 5), 'take2', 2), (And(v0%8 == 2, (7*v1)%8 == 4), 'take2', 2), (And(v0%8 == 3, (7*v1)%8 == 3), 'take2', 2), (And(v0%8 == 4, (7*v1)%8 == 2), 'take2', 2), (And(v0%8 == 5, (7*v1)%8 == 1), 'take2', 2), (And(v0%8 == 6, (7*v1)%8 == 0), 'take1', 6), (And(v0%8 == 7, (7*v1)%8 == 7), 'take1', 6), (And(v0%8 == 0, (7*v1)%8 == 7), 'take2', 1), (And(v0%8 == 1, (7*v1)%8 == 6), 'take2', 1), (And(v0%8 == 2, (7*v1)%8 == 5), 'take2', 1), (And(v0%8 == 3, (7*v1)%8 == 4), 'take2', 1), (And(v0%8 == 4, (7*v1)%8 == 3), 'take2', 1), (And(v0%8 == 5, (7*v1)%8 == 2), 'take2', 1), (And(v0%8 == 6, (7*v1)%8 == 1), 'take2', 1), (And(v0%8 == 7, (7*v1)%8 == 0), 'take1', 7)]
time cost:	 324.55276012420654

normal rule
N-formula:	 Not((-2*v0 + 2*v1)%9 == 0)
time cost:	 608.5927178859711
strategies:	 [(And((7*v0)%9 == 0, (2*v1)%9 == 1), 'take2', 5), (And((7*v0)%9 == 1, (2*v1)%9 == 0), 'take1', 4), (And((7*v0)%9 == 2, (2*v1)%9 == 8), 'take1', 4), (And((7*v0)%9 == 3, (2*v1)%9 == 7), 'take2', 5), (And((7*v0)%9 == 4, (2*v1)%9 == 6), 'take1', 4), (And((7*v0)%9 == 5, (2*v1)%9 == 5), 'take2', 5), (And((7*v0)%9 == 6, (2*v1)%9 == 4), 'take1', 4), (And((7*v0)%9 == 7, (2*v1)%9 == 3), 'take2', 5), (And((7*v0)%9 == 8, (2*v1)%9 == 2), 'take1', 4), (And((7*v0)%9 == 0, (2*v1)%9 == 2), 'take2', 1), (And((7*v0)%9 == 1, (2*v1)%9 == 1), 'take2', 1), (And((7*v0)%9 == 2, (2*v1)%9 == 0), 'take1', 8), (And((7*v0)%9 == 3, (2*v1)%9 == 8), 'take2', 1), (And((7*v0)%9 == 4, (2*v1)%9 == 7), 'take2', 1), (And((7*v0)%9 == 5, (2*v1)%9 == 6), 'take2', 1), (And((7*v0)%9 == 6, (2*v1)%9 == 5), 'take2', 1), (And((7*v0)%9 == 7, (2*v1)%9 == 4), 'take2', -1*v0 + v1), (And((7*v0)%9 == 8, (2*v1)%9 == 3), 'take2', 1), (And((7*v0)%9 == 0, (2*v1)%9 == 3), 'take2', 6), (And((7*v0)%9 == 1, (2*v1)%9 == 2), 'take1', 3), (And((7*v0)%9 == 2, (2*v1)%9 == 1), 'take1', 3), (And((7*v0)%9 == 3, (2*v1)%9 == 0), 'take1', 3), (And((7*v0)%9 == 4, (2*v1)%9 == 8), 'take1', 3), (And((7*v0)%9 == 5, (2*v1)%9 == 7), 'take2', 6), (And((7*v0)%9 == 6, (2*v1)%9 == 6), 'take1', 3), (And((7*v0)%9 == 7, (2*v1)%9 == 5), 'take2', 6), (And((7*v0)%9 == 8, (2*v1)%9 == 4), 'take1', 3), (And((7*v0)%9 == 0, (2*v1)%9 == 4), 'take2', 2), (And((7*v0)%9 == 1, (2*v1)%9 == 3), 'take2', 2), (And((7*v0)%9 == 2, (2*v1)%9 == 2), 'take1', 7), (And((7*v0)%9 == 3, (2*v1)%9 == 1), 'take2', 2), (And((7*v0)%9 == 4, (2*v1)%9 == 0), 'take1', 7), (And((7*v0)%9 == 5, (2*v1)%9 == 8), 'take2', 2), (And((7*v0)%9 == 6, (2*v1)%9 == 7), 'take2', 2), (And((7*v0)%9 == 7, (2*v1)%9 == 6), 'take2', -1*v0 + v1), (And((7*v0)%9 == 8, (2*v1)%9 == 5), 'take2', 2), (And((7*v0)%9 == 0, (2*v1)%9 == 5), 'take2', 7), (And((7*v0)%9 == 1, (2*v1)%9 == 4), 'take1', 2), (And((7*v0)%9 == 2, (2*v1)%9 == 3), 'take1', 2), (And((7*v0)%9 == 3, (2*v1)%9 == 2), 'take1', 2), (And((7*v0)%9 == 4, (2*v1)%9 == 1), 'take1', 2), (And((7*v0)%9 == 5, (2*v1)%9 == 0), 'take1', 2), (And((7*v0)%9 == 6, (2*v1)%9 == 8), 'take1', 2), (And((7*v0)%9 == 7, (2*v1)%9 == 7), 'take2', 7), (And((7*v0)%9 == 8, (2*v1)%9 == 6), 'take1', 2), (And((7*v0)%9 == 0, (2*v1)%9 == 6), 'take2', 3), (And((7*v0)%9 == 1, (2*v1)%9 == 5), 'take2', 3), (And((7*v0)%9 == 2, (2*v1)%9 == 4), 'take1', 6), (And((7*v0)%9 == 3, (2*v1)%9 == 3), 'take2', 3), (And((7*v0)%9 == 4, (2*v1)%9 == 2), 'take1', 6), (And((7*v0)%9 == 5, (2*v1)%9 == 1), 'take2', 3), (And((7*v0)%9 == 6, (2*v1)%9 == 0), 'take1', 6), (And((7*v0)%9 == 7, (2*v1)%9 == 8), 'take2', -1*v0 + v1), (And((7*v0)%9 == 8, (2*v1)%9 == 7), 'take2', 3), (And((7*v0)%9 == 0, (2*v1)%9 == 7), 'take2', 8), (And((7*v0)%9 == 1, (2*v1)%9 == 6), 'take1', 1), (And((7*v0)%9 == 2, (2*v1)%9 == 5), 'take1', 1), (And((7*v0)%9 == 3, (2*v1)%9 == 4), 'take1', 1), (And((7*v0)%9 == 4, (2*v1)%9 == 3), 'take1', 1), (And((7*v0)%9 == 5, (2*v1)%9 == 2), 'take1', 1), (And((7*v0)%9 == 6, (2*v1)%9 == 1), 'take1', 1), (And((7*v0)%9 == 7, (2*v1)%9 == 0), 'take1', 1), (And((7*v0)%9 == 8, (2*v1)%9 == 8), 'take1', 1), (And((7*v0)%9 == 0, (2*v1)%9 == 8), 'take2', 4), (And((7*v0)%9 == 1, (2*v1)%9 == 7), 'take2', 4), (And((7*v0)%9 == 2, (2*v1)%9 == 6), 'take1', 5), (And((7*v0)%9 == 3, (2*v1)%9 == 5), 'take2', 4), (And((7*v0)%9 == 4, (2*v1)%9 == 4), 'take1', 5), (And((7*v0)%9 == 5, (2*v1)%9 == 3), 'take2', 4), (And((7*v0)%9 == 6, (2*v1)%9 == 2), 'take1', 5), (And((7*v0)%9 == 7, (2*v1)%9 == 1), 'take2', 4), (And((7*v0)%9 == 8, (2*v1)%9 == 0), 'take1', 5)]
time cost:	 667.5196151733398

normal rule
N-formula:	 Not((3*v0 + -3*v1)%10 == 0)
time cost:	 265.9375264644623
strategies:	 [(And((3*v0)%10 == 0, (7*v1)%10 == 1), 'take2', 3), (And((3*v0)%10 == 1, (7*v1)%10 == 0), 'take1', 7), (And((3*v0)%10 == 2, (7*v1)%10 == 9), 'take2', 3), (And((3*v0)%10 == 3, (7*v1)%10 == 8), 'take2', 3), (And((3*v0)%10 == 4, (7*v1)%10 == 7), 'take1', 7), (And((3*v0)%10 == 5, (7*v1)%10 == 6), 'take2', 3), (And((3*v0)%10 == 6, (7*v1)%10 == 5), 'take2', 3), (And((3*v0)%10 == 7, (7*v1)%10 == 4), 'take1', 7), (And((3*v0)%10 == 8, (7*v1)%10 == 3), 'take2', 3), (And((3*v0)%10 == 9, (7*v1)%10 == 2), 'take2', 3), (And((3*v0)%10 == 0, (7*v1)%10 == 2), 'take2', 6), (And((3*v0)%10 == 1, (7*v1)%10 == 1), 'take1', 4), (And((3*v0)%10 == 2, (7*v1)%10 == 0), 'take1', 4), (And((3*v0)%10 == 3, (7*v1)%10 == 9), 'take2', 6), (And((3*v0)%10 == 4, (7*v1)%10 == 8), 'take1', 4), (And((3*v0)%10 == 5, (7*v1)%10 == 7), 'take1', 4), (And((3*v0)%10 == 6, (7*v1)%10 == 6), 'take2', 6), (And((3*v0)%10 == 7, (7*v1)%10 == 5), 'take1', 4), (And((3*v0)%10 == 8, (7*v1)%10 == 4), 'take1', 4), (And((3*v0)%10 == 9, (7*v1)%10 == 3), 'take2', 6), (And((3*v0)%10 == 0, (7*v1)%10 == 3), 'take2', 9), (And((3*v0)%10 == 1, (7*v1)%10 == 2), 'take1', 1), (And((3*v0)%10 == 2, (7*v1)%10 == 1), 'take1', 1), (And((3*v0)%10 == 3, (7*v1)%10 == 0), 'take1', 1), (And((3*v0)%10 == 4, (7*v1)%10 == 9), 'take1', 1), (And((3*v0)%10 == 5, (7*v1)%10 == 8), 'take1', 1), (And((3*v0)%10 == 6, (7*v1)%10 == 7), 'take1', v0 + -1*v1), (And((3*v0)%10 == 7, (7*v1)%10 == 6), 'take1', 1), (And((3*v0)%10 == 8, (7*v1)%10 == 5), 'take1', 1), (And((3*v0)%10 == 9, (7*v1)%10 == 4), 'take1', 1), (And((3*v0)%10 == 0, (7*v1)%10 == 4), 'take2', 2), (And((3*v0)%10 == 1, (7*v1)%10 == 3), 'take2', 2), (And((3*v0)%10 == 2, (7*v1)%10 == 2), 'take2', 2), (And((3*v0)%10 == 3, (7*v1)%10 == 1), 'take2', 2), (And((3*v0)%10 == 4, (7*v1)%10 == 0), 'take1', 8), (And((3*v0)%10 == 5, (7*v1)%10 == 9), 'take2', 2), (And((3*v0)%10 == 6, (7*v1)%10 == 8), 'take2', 2), (And((3*v0)%10 == 7, (7*v1)%10 == 7), 'take1', 8), (And((3*v0)%10 == 8, (7*v1)%10 == 6), 'take2', 2), (And((3*v0)%10 == 9, (7*v1)%10 == 5), 'take2', 2), (And((3*v0)%10 == 0, (7*v1)%10 == 5), 'take2', 5), (And((3*v0)%10 == 1, (7*v1)%10 == 4), 'take1', 5), (And((3*v0)%10 == 2, (7*v1)%10 == 3), 'take2', 5), (And((3*v0)%10 == 3, (7*v1)%10 == 2), 'take2', 5), (And((3*v0)%10 == 4, (7*v1)%10 == 1), 'take1', 5), (And((3*v0)%10 == 5, (7*v1)%10 == 0), 'take1', 5), (And((3*v0)%10 == 6, (7*v1)%10 == 9), 'take2', 5), (And((3*v0)%10 == 7, (7*v1)%10 == 8), 'take1', 5), (And((3*v0)%10 == 8, (7*v1)%10 == 7), 'take1', 5), (And((3*v0)%10 == 9, (7*v1)%10 == 6), 'take2', 5), (And((3*v0)%10 == 0, (7*v1)%10 == 6), 'take2', 8), (And((3*v0)%10 == 1, (7*v1)%10 == 5), 'take1', 2), (And((3*v0)%10 == 2, (7*v1)%10 == 4), 'take1', 2), (And((3*v0)%10 == 3, (7*v1)%10 == 3), 'take2', 8), (And((3*v0)%10 == 4, (7*v1)%10 == 2), 'take1', 2), (And((3*v0)%10 == 5, (7*v1)%10 == 1), 'take1', 2), (And((3*v0)%10 == 6, (7*v1)%10 == 0), 'take1', 2), (And((3*v0)%10 == 7, (7*v1)%10 == 9), 'take1', 2), (And((3*v0)%10 == 8, (7*v1)%10 == 8), 'take1', 2), (And((3*v0)%10 == 9, (7*v1)%10 == 7), 'take1', v0 + -1*v1), (And((3*v0)%10 == 0, (7*v1)%10 == 7), 'take2', 1), (And((3*v0)%10 == 1, (7*v1)%10 == 6), 'take2', 1), (And((3*v0)%10 == 2, (7*v1)%10 == 5), 'take2', 1), (And((3*v0)%10 == 3, (7*v1)%10 == 4), 'take2', 1), (And((3*v0)%10 == 4, (7*v1)%10 == 3), 'take2', 1), (And((3*v0)%10 == 5, (7*v1)%10 == 2), 'take2', 1), (And((3*v0)%10 == 6, (7*v1)%10 == 1), 'take2', 1), (And((3*v0)%10 == 7, (7*v1)%10 == 0), 'take1', 9), (And((3*v0)%10 == 8, (7*v1)%10 == 9), 'take2', 1), (And((3*v0)%10 == 9, (7*v1)%10 == 8), 'take2', 1), (And((3*v0)%10 == 0, (7*v1)%10 == 8), 'take2', 4), (And((3*v0)%10 == 1, (7*v1)%10 == 7), 'take1', 6), (And((3*v0)%10 == 2, (7*v1)%10 == 6), 'take2', 4), (And((3*v0)%10 == 3, (7*v1)%10 == 5), 'take2', 4), (And((3*v0)%10 == 4, (7*v1)%10 == 4), 'take1', 6), (And((3*v0)%10 == 5, (7*v1)%10 == 3), 'take2', 4), (And((3*v0)%10 == 6, (7*v1)%10 == 2), 'take2', 4), (And((3*v0)%10 == 7, (7*v1)%10 == 1), 'take1', 6), (And((3*v0)%10 == 8, (7*v1)%10 == 0), 'take1', 6), (And((3*v0)%10 == 9, (7*v1)%10 == 9), 'take2', 4), (And((3*v0)%10 == 0, (7*v1)%10 == 9), 'take2', 7), (And((3*v0)%10 == 1, (7*v1)%10 == 8), 'take1', 3), (And((3*v0)%10 == 2, (7*v1)%10 == 7), 'take1', 3), (And((3*v0)%10 == 3, (7*v1)%10 == 6), 'take2', 7), (And((3*v0)%10 == 4, (7*v1)%10 == 5), 'take1', 3), (And((3*v0)%10 == 5, (7*v1)%10 == 4), 'take1', 3), (And((3*v0)%10 == 6, (7*v1)%10 == 3), 'take2', 7), (And((3*v0)%10 == 7, (7*v1)%10 == 2), 'take1', 3), (And((3*v0)%10 == 8, (7*v1)%10 == 1), 'take1', 3), (And((3*v0)%10 == 9, (7*v1)%10 == 0), 'take1', 3)]
time cost:	 359.71495628356934

normal rule
N-formula:	 Not((v0 + v1)%2 == 0)
time cost:	 0.27617669105529785
strategies:	 [(And(v0%2 == 0, v1%2 == 1), 'take2', 1), (And(v0%2 == 1, v1%2 == 0), 'take1', 1)]
time cost:	 2.2992427349090576

normal rule
N-formula:	 Not((v0 + -1*v1)%3 == 0)
time cost:	 0.5630004405975342
strategies:	 [(And(v0%3 == 0, (2*v1)%3 == 1), 'take2', 2), (And(v0%3 == 1, (2*v1)%3 == 0), 'take1', 1), (And(v0%3 == 2, (2*v1)%3 == 2), 'take1', 1), (And(v0%3 == 0, (2*v1)%3 == 2), 'take2', 1), (And(v0%3 == 1, (2*v1)%3 == 1), 'take2', 1), (And(v0%3 == 2, (2*v1)%3 == 0), 'take1', 2)]
time cost:	 5.929210424423218

normal rule
N-formula:	 Not((v0 + -1*v1)%4 == 0)
time cost:	 1.4462223052978516
strategies:	 [(And(v0%4 == 0, (3*v1)%4 == 1), 'take2', 3), (And(v0%4 == 1, (3*v1)%4 == 0), 'take1', 1), (And(v0%4 == 2, (3*v1)%4 == 3), 'take1', 1), (And(v0%4 == 3, (3*v1)%4 == 2), 'take1', 1), (And(v0%4 == 0, (3*v1)%4 == 2), 'take2', 2), (And(v0%4 == 1, (3*v1)%4 == 1), 'take2', 2), (And(v0%4 == 2, (3*v1)%4 == 0), 'take1', 2), (And(v0%4 == 3, (3*v1)%4 == 3), 'take1', 2), (And(v0%4 == 0, (3*v1)%4 == 3), 'take2', 1), (And(v0%4 == 1, (3*v1)%4 == 2), 'take2', 1), (And(v0%4 == 2, (3*v1)%4 == 1), 'take2', 1), (And(v0%4 == 3, (3*v1)%4 == 0), 'take1', 3)]
time cost:	 13.393879175186157

normal rule
N-formula:	 Not((v0 + -1*v1)%5 == 0)
time cost:	 3.2648215293884277
strategies:	 [(And(v0%5 == 0, (4*v1)%5 == 1), 'take2', 4), (And(v0%5 == 1, (4*v1)%5 == 0), 'take1', 1), (And(v0%5 == 2, (4*v1)%5 == 4), 'take1', 1), (And(v0%5 == 3, (4*v1)%5 == 3), 'take1', 1), (And(v0%5 == 4, (4*v1)%5 == 2), 'take1', 1), (And(v0%5 == 0, (4*v1)%5 == 2), 'take2', 3), (And(v0%5 == 1, (4*v1)%5 == 1), 'take2', 3), (And(v0%5 == 2, (4*v1)%5 == 0), 'take1', 2), (And(v0%5 == 3, (4*v1)%5 == 4), 'take1', 2), (And(v0%5 == 4, (4*v1)%5 == 3), 'take1', 2), (And(v0%5 == 0, (4*v1)%5 == 3), 'take2', 2), (And(v0%5 == 1, (4*v1)%5 == 2), 'take2', 2), (And(v0%5 == 2, (4*v1)%5 == 1), 'take2', 2), (And(v0%5 == 3, (4*v1)%5 == 0), 'take1', 3), (And(v0%5 == 4, (4*v1)%5 == 4), 'take1', 3), (And(v0%5 == 0, (4*v1)%5 == 4), 'take2', 1), (And(v0%5 == 1, (4*v1)%5 == 3), 'take2', 1), (And(v0%5 == 2, (4*v1)%5 == 2), 'take2', 1), (And(v0%5 == 3, (4*v1)%5 == 1), 'take2', 1), (And(v0%5 == 4, (4*v1)%5 == 0), 'take1', 4)]
time cost:	 19.120710372924805

normal rule
N-formula:	 Not((-1*v0 + v1)%6 == 0)
time cost:	 7.029141187667847
strategies:	 [(And((5*v0)%6 == 0, v1%6 == 1), 'take2', 1), (And((5*v0)%6 == 1, v1%6 == 0), 'take1', 5), (And((5*v0)%6 == 2, v1%6 == 5), 'take2', 1), (And((5*v0)%6 == 3, v1%6 == 4), 'take2', 1), (And((5*v0)%6 == 4, v1%6 == 3), 'take2', 1), (And((5*v0)%6 == 5, v1%6 == 2), 'take2', 1), (And((5*v0)%6 == 0, v1%6 == 2), 'take2', 2), (And((5*v0)%6 == 1, v1%6 == 1), 'take1', 4), (And((5*v0)%6 == 2, v1%6 == 0), 'take1', 4), (And((5*v0)%6 == 3, v1%6 == 5), 'take2', 2), (And((5*v0)%6 == 4, v1%6 == 4), 'take2', 2), (And((5*v0)%6 == 5, v1%6 == 3), 'take2', 2), (And((5*v0)%6 == 0, v1%6 == 3), 'take2', 3), (And((5*v0)%6 == 1, v1%6 == 2), 'take1', 3), (And((5*v0)%6 == 2, v1%6 == 1), 'take1', 3), (And((5*v0)%6 == 3, v1%6 == 0), 'take1', 3), (And((5*v0)%6 == 4, v1%6 == 5), 'take2', 3), (And((5*v0)%6 == 5, v1%6 == 4), 'take2', 3), (And((5*v0)%6 == 0, v1%6 == 4), 'take2', 4), (And((5*v0)%6 == 1, v1%6 == 3), 'take1', 2), (And((5*v0)%6 == 2, v1%6 == 2), 'take1', 2), (And((5*v0)%6 == 3, v1%6 == 1), 'take1', 2), (And((5*v0)%6 == 4, v1%6 == 0), 'take1', 2), (And((5*v0)%6 == 5, v1%6 == 5), 'take2', 4), (And((5*v0)%6 == 0, v1%6 == 5), 'take2', 5), (And((5*v0)%6 == 1, v1%6 == 4), 'take1', 1), (And((5*v0)%6 == 2, v1%6 == 3), 'take1', 1), (And((5*v0)%6 == 3, v1%6 == 2), 'take1', 1), (And((5*v0)%6 == 4, v1%6 == 1), 'take1', 1), (And((5*v0)%6 == 5, v1%6 == 0), 'take1', 1)]
time cost:	 32.546311378479004

normal rule
N-formula:	 Not((v0 + v1)%2 == 0)
time cost:	 0.2153913974761963
strategies:	 [(And(v0%2 == 0, v1%2 == 1), 'take2', 1), (And(v0%2 == 1, v1%2 == 0), 'take1', 1)]
time cost:	 1.654677391052246

normal rule
N-formula:	 Not((-1*v0 + v1)%4 == 0)
time cost:	 119.07332992553711
strategies:	 [(And((3*v0)%4 == 0, v1%4 == 1), 'take2', 1), (And((3*v0)%4 == 1, v1%4 == 0), 'take1', 3), (And((3*v0)%4 == 2, v1%4 == 3), 'take2', 1), (And((3*v0)%4 == 3, v1%4 == 2), 'take2', 1), (And((3*v0)%4 == 0, v1%4 == 2), 'take2', 2), (And((3*v0)%4 == 1, v1%4 == 1), 'take1', 2), (And((3*v0)%4 == 2, v1%4 == 0), 'take1', 2), (And((3*v0)%4 == 3, v1%4 == 3), 'take2', 2), (And((3*v0)%4 == 0, v1%4 == 3), 'take2', 3), (And((3*v0)%4 == 1, v1%4 == 2), 'take1', 1), (And((3*v0)%4 == 2, v1%4 == 1), 'take1', 1), (And((3*v0)%4 == 3, v1%4 == 0), 'take1', 1)]
time cost:	 126.91396760940552

normal rule
N-formula:	 Not((v0 + v1)%2 == 0)
time cost:	 0.18220829963684082
strategies:	 [(And(v0%2 == 0, v1%2 == 1), 'take2', 1), (And(v0%2 == 1, v1%2 == 0), 'take1', 1)]
time cost:	 1.4007902145385742

misere rule
N-formula:	 Not((v0 + v1)%2 == 1)
time cost:	 0.3470025062561035
strategies:	 [(And(v0%2 == 1, v1%2 == 1), 'take1', 1)]
time cost:	 1.7245330810546875

normal rule
N-formula:	 Not((v0 + -1*v1)%4 == 0)
time cost:	 2.047668933868408
strategies:	 [(And(v0%4 == 0, (3*v1)%4 == 1), 'take2', 3), (And(v0%4 == 1, (3*v1)%4 == 0), 'take1', 1), (And(v0%4 == 2, (3*v1)%4 == 3), 'take1', 1), (And(v0%4 == 3, (3*v1)%4 == 2), 'take1', 1), (And(v0%4 == 0, (3*v1)%4 == 2), 'take2', 2), (And(v0%4 == 1, (3*v1)%4 == 1), 'take2', 2), (And(v0%4 == 2, (3*v1)%4 == 0), 'take1', 2), (And(v0%4 == 3, (3*v1)%4 == 3), 'take1', 2), (And(v0%4 == 0, (3*v1)%4 == 3), 'take2', 1), (And(v0%4 == 1, (3*v1)%4 == 2), 'take2', 1), (And(v0%4 == 2, (3*v1)%4 == 1), 'take2', 1), (And(v0%4 == 3, (3*v1)%4 == 0), 'take1', 3)]
time cost:	 9.44736385345459
